#!/usr/bin/python
#Emily Shack and Naomi Yamamoto
#Stub code for Word Finder website

import psycopg2
import getpass
import itertools

def sanitizeInput(searchText):
    #This method will make sure input does not include any characters other than letters and *.
    #If any invalid input is present (numbers, extra white space, etc.) this method will strip
    #out the invalid input and return the array sanitizedSearchText including only valid characters
    sanitizedText = ''
    for letter in searchText:
        if len(sanitizedText) >= 45:
            return sanitizedText
        if letter in ('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ*'):
            sanitizedText += letter.lower()
    return sanitizedText
    
def orderlessSearch(sanitizedSearchText):
    #This method will use the sanitized input to return a list of words from the dictionary database
    #which contain only the characters in the input, each used exactly once. Letter order does not 
    #matter for this search- for example, if the sanitized input text is "TR*", "TRY" and "ROT" would 
    #both be valid words.
    forQuery = ''
    for letter in sanitizedSearchText:
        if letter == '*':
            forQuery += '_'
        else:
            forQuery += letter
    queryList = [''.join(perm) for perm in itertools.permutations(forQuery)]
    database = 'yamamotn'
    user = 'yamamotn'
    password = getpass.getpass()
    try:
        connection = psycopg2.connect(database=database, user=user, password=password)
    except Exception, e:
        print 'Connection error: ', e
        exit()
    wordList = ()
    for forQuery in queryList:
        try:
            cursor = connection.cursor()
            query = "SELECT id FROM words WHERE id LIKE '" + forQuery + "'"
            cursor.execute(query)
            for row in cursor.fetchall():
                wordList = wordList + (row[0],)
        except Exception, e:
            print 'Cursor error', e
            connection.close()
            exit()
    connection.close()
    return wordList
    
    
def orderSearch(sanitizedSearchText):
    #This method will use the sanitized input to return a list of words from the dictionary database
    #which contain only the characters in the input, each used exactly once. Letter order matters for
    #this search- for example, if the sanitized input text is "TR*", "TRY" would be a valid word but
    #"ROT" would not.
    forQuery = ''
    for letter in sanitizedSearchText:
        if letter == '*':
            forQuery += '_'
        else:
            forQuery += letter
    database = 'yamamotn'
    user = 'yamamotn'
    password = getpass.getpass()
    try:
        connection = psycopg2.connect(database=database, user=user, password=password)
    except Exception, e:
        print 'Connection error: ', e
        exit()
    wordList = ()
    try:
        cursor = connection.cursor()
        query = "SELECT id FROM words WHERE id LIKE '" + forQuery + "'"
        cursor.execute(query)
        for row in cursor.fetchall():
           wordList = wordList + (row[0],)
    except Exception, e:
        print 'Cursor error', e
        connection.close()
        exit()
    connection.close()
    return wordList
    
def performSearch(checkbox, input):
    #This method runs orderlessSearch if the checkbox is not checked, and runs orderSearch if the
    #checkbox is checked.
    sanitizedInput = sanitizeInput(input)
    if checkbox == 1:
        return orderSearch(sanitizedInput)
    else:
        return orderlessSearch(sanitizedInput)
    
def printResult(wordList):
    #This method takes as input a list of words generated by one of the search functions, and displays
    #it on the results page. We may or may not need this function, depending on how our results page
    #looks.
    pass

def main():
    print performSearch(1, "Card*")
    print '_____________________________'
    print performSearch(0, "Card*")

if __name__ == '__main__':
    main()

